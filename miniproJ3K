def kingcheck(board):
    kingpos = None
    for r in range(len(board)):
        for c in range(len(board[r])):
            if board[r][c] == 'K':
                kingpos = (r, c)
                break
        if kingpos:
            break

    if not kingpos:
        return "Error:not found"

    kingrow, kingcol = kingpos
    directions = {
        'rook': [(1, 0), (-1, 0), (0, 1), (0, -1)],
        'bishop': [(1, 1), (1, -1), (-1, 1), (-1, -1)],
        'queen': [(1, 0), (-1, 0), (0, 1), (0, -1), (1, 1), (1, -1), (-1, 1), (-1, -1)],
        'pawn': [(1, -1), (1, 1)] 
    }
    for piecetype, moves in directions.items():
        for dr, dc in moves:
            r, c = kingrow, kingcol
            while 0 <= r < len(board) and 0 <= c < len(board[r]):
                r += dr
                c += dc
                if 0 <= r < len(board) and 0 <= c < len(board[r]):
                    if board[r][c] != '.':
                        if piecetype == 'rook' and board[r][c] == 'R':
                            return "Success\n"
                        if piecetype == 'bishop' and board[r][c] == 'B':
                            return "Success\n"
                        if piecetype == 'queen' and board[r][c] == 'Q':
                            return "Success\n"
                        if piecetype == 'pawn' and board[r][c] == 'P':
                            if r - kingrow == 1:
                                return "Success\n"
                        break

    return "Fail\n" 

board = [
    "......",
    "...R..",
    "......",
    "..K...",
    ".P....",
    "......"
]
board1 = [
    "....B.",
    "......",
    "......",
    "..K...",
    "..P...",
    "......"]

print(kingcheck(board))
print(kingcheck(board1))
